// <auto-generated />
using System;
using ChatApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatApp.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatApp.Core.Models.GroupMessage", b =>
                {
                    b.Property<int>("GroupMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupMessageID");

                    b.Property<string>("MessageAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageContent")
                        .HasColumnType("longtext")
                        .HasColumnName("MessageContent");

                    b.Property<int>("MessageGroup")
                        .HasColumnType("int")
                        .HasColumnName("MessageGroup");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("GroupMessageID");

                    b.ToTable("GroupMessage", (string)null);
                });

            modelBuilder.Entity("ChatApp.Core.Models.Messages", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    b.Property<string>("MessageAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageContent")
                        .HasColumnType("longtext")
                        .HasColumnName("MessageContent");

                    b.Property<int>("MessageDestination")
                        .HasColumnType("int")
                        .HasColumnName("MessageDestination");

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MessageID");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("ChatApp.Core.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UserID");

                    b.Property<string>("E_Mail")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("RegisterDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("UserID");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
